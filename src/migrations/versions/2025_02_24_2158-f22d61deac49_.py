"""empty message

Revision ID: f22d61deac49
Revises:
Create Date: 2025-02-24 21:58:01.436490

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f22d61deac49"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("create schema if not exists manman")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "game_servers",
        sa.Column("game_server_id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("server_type", sa.Enum("STEAM", name="servertype"), nullable=False),
        sa.Column("app_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("game_server_id"),
        schema="manman",
    )
    op.create_index(
        "ixu_game_server_app_id_server_type",
        "game_servers",
        ["app_id", "server_type"],
        unique=True,
        schema="manman",
    )
    op.create_index(
        "ixu_game_server_name_server_type",
        "game_servers",
        ["name", "server_type"],
        unique=True,
        schema="manman",
    )
    op.create_table(
        "workers",
        sa.Column("worker_id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("end_date", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("worker_id"),
        schema="manman",
    )
    op.create_table(
        "game_server_configs",
        sa.Column("game_server_config_id", sa.Integer(), nullable=False),
        sa.Column("game_server_id", sa.Integer(), nullable=False),
        sa.Column("is_default", sa.Boolean(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("executable", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("args", sa.ARRAY(sa.String()), nullable=False),
        sa.ForeignKeyConstraint(
            ["game_server_id"],
            ["manman.game_servers.game_server_id"],
        ),
        sa.PrimaryKeyConstraint("game_server_config_id"),
        schema="manman",
    )
    op.create_index(
        op.f("ix_manman_game_server_configs_game_server_id"),
        "game_server_configs",
        ["game_server_id"],
        unique=False,
        schema="manman",
    )
    op.create_index(
        "ixu_game_server_configs_game_server_id_name",
        "game_server_configs",
        ["game_server_id", "name"],
        unique=True,
        schema="manman",
    )
    op.create_index(
        "ixuf_game_server_configs_default_config",
        "game_server_configs",
        ["game_server_id", "is_default"],
        unique=True,
        schema="manman",
        postgresql_where="is_default",
    )
    op.create_table(
        "game_server_instances",
        sa.Column("game_server_instance_id", sa.Integer(), nullable=False),
        sa.Column("game_server_config_id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("end_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["game_server_config_id"],
            ["manman.game_server_configs.game_server_config_id"],
        ),
        sa.PrimaryKeyConstraint("game_server_instance_id"),
        schema="manman",
    )
    op.create_index(
        op.f("ix_manman_game_server_instances_game_server_config_id"),
        "game_server_instances",
        ["game_server_config_id"],
        unique=False,
        schema="manman",
    )
    # ### end Alembic commands ###

    # manual inserts of data
    op.execute("""
    insert into manman.game_servers (name, server_type, app_id)
    values ('cs2', 'STEAM', 730), ('openttd', 'STEAM', 1536610), ('valheim', 'STEAM', 896660);
    """)

    op.execute("""
    insert into manman.game_server_configs (game_server_id, is_default, name, executable, args)
    SELECT game_server_id, true, 'testcs2', 'game/bin/linuxsteamrt64/cs2', ARRAY['-dedicated', '-port', '27015', '+map', 'de_ancient']
    from manman.game_servers
    where name = 'cs2'
    """)

    op.execute("""
    insert into manman.game_server_configs (game_server_id, is_default, name, executable, args)
    SELECT game_server_id, true, 'testottd', 'openttd', ARRAY['-D']
    from manman.game_servers
    where name = 'openttd'
    """)

    op.execute("""
    insert into manman.game_server_configs (game_server_id, is_default, name, executable, args)
    SELECT game_server_id, true, 'testvalheim', 'valheim', ARRAY['']
    from manman.game_servers
    where name = 'valheim'
    """)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_manman_game_server_instances_game_server_config_id"),
        table_name="game_server_instances",
        schema="manman",
    )
    op.drop_table("game_server_instances", schema="manman")
    op.drop_index(
        "ixuf_game_server_configs_default_config",
        table_name="game_server_configs",
        schema="manman",
        postgresql_where="is_default",
    )
    op.drop_index(
        "ixu_game_server_configs_game_server_id_name",
        table_name="game_server_configs",
        schema="manman",
    )
    op.drop_index(
        op.f("ix_manman_game_server_configs_game_server_id"),
        table_name="game_server_configs",
        schema="manman",
    )
    op.drop_table("game_server_configs", schema="manman")
    op.drop_table("workers", schema="manman")
    op.drop_index(
        "ixu_game_server_name_server_type", table_name="game_servers", schema="manman"
    )
    op.drop_index(
        "ixu_game_server_app_id_server_type", table_name="game_servers", schema="manman"
    )
    op.drop_table("game_servers", schema="manman")
    # ### end Alembic commands ###
    op.execute("drop type manman.servertype;")
    op.execute("drop schema manman")
