image:
  name: "ghcr.io/whale-net/manman"
  tag: ""

namespace: manman

# Configuration for which APIs to deploy
apis:
  # Experience API (host layer)
  experience:
    enabled: true
    name: manman-experience
    replicas: 1
    port: 8000
    command: "start-experience-api"

  # Worker DAL API
  workerDal:
    enabled: true
    name: manman-worker-dal
    replicas: 1
    port: 8000
    command: "start-worker-dal-api"

# Ingress configuration (primarily for development)
ingress:
  # Enable/disable ingress
  enabled: false

  # Custom ingress name (defaults to manman-ingress-{app_env} if empty)
  name: ""

  # Custom host (defaults to localhost for development if empty)
  host: "localhost"

  # Ingress class name (e.g., nginx, traefik)
  ingressClassName: ""

  # Custom annotations for ingress controller
  annotations: {}
    # nginx.ingress.kubernetes.io/rewrite-target: /$2
    # nginx.ingress.kubernetes.io/use-regex: "true"
    # cert-manager.io/cluster-issuer: letsencrypt-prod

  # Override auto-generated rules with explicit configuration
  # If empty, rules are auto-generated based on enabled APIs
  # Auto-generated rules will create:
  #   - /experience -> experience API service
  #   - /workerdal -> worker DAL API service
  rules: []
    # Example explicit rules:
    # - host: localhost
    #   paths:
    #     - path: /experience
    #       pathType: Prefix
    #       serviceName: manman-experience-dev-service
    #       servicePort: 8000
    #     - path: /workerdal
    #       pathType: Prefix
    #       serviceName: manman-worker-dal-dev-service
    #       servicePort: 8000

# Migration configuration
migrations:
  # Set to true to skip running migrations entirely
  skip_migration: false
  # Timeout for migration job in seconds (5 minutes)
  timeout: 300

# ArgoCD specific configuration
argocd:
  # Sync timeout for the entire application (10 minutes)
  syncTimeout: 600
  # Retry configuration
  retry:
    limit: 3
    backoff:
      duration: 30s
      factor: 2
      maxDuration: 3m

env:
  rabbitmq:
    port: 5672
    host: <rabbitmq_host>
    user: <rabbitmq_user>
    password: <rabbitmq_password>
    enable_ssl: false
    ssl_hostname: <rabbitmq_ssl_hostname>
  # change this to the environment you are deploying to
  app_env: dev

  db:
    url: <postgresql+psycopg2://user:password@host:port/database>
#  otelCollector:
#    logs:
#      endpoint: <logs_endpoint>
#    traces:
#      endpoint: <traces_endpoint>
#    metrics:
#      endpoint: <metrics_endpoint>
