---
# Source: manman-host/templates/experience-api-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: manman-experience-dev-pdb
  namespace: manman
  labels:
    app: manman-experience-dev
    component: experience-api
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: manman-experience-dev
---
# Source: manman-host/templates/status-api-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: manman-status-dev-pdb
  namespace: manman
  labels:
    app: manman-status-dev
    component: status-api
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: manman-status-dev
---
# Source: manman-host/templates/status-processor-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: manman-status-processor-dev-pdb
  namespace: manman
  labels:
    app: manman-status-processor-dev
    component: status-processor
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: manman-status-processor-dev
---
# Source: manman-host/templates/worker-dal-api-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: manman-worker-dal-dev-pdb
  namespace: manman
  labels:
    app: manman-worker-dal-dev
    component: worker-dal-api
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: manman-worker-dal-dev
---
# Source: manman-host/templates/experience-api-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: manman-experience-dev-service
  namespace: manman
  labels:
    component: experience-api
spec:
  type: ClusterIP
  selector:
    app: manman-experience-dev
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      name: http
---
# Source: manman-host/templates/status-api-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: manman-status-dev-service
  namespace: manman
  labels:
    component: status-api
spec:
  type: ClusterIP
  selector:
    app: manman-status-dev
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      name: http
---
# Source: manman-host/templates/worker-dal-api-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: manman-worker-dal-dev-service
  namespace: manman
  labels:
    component: worker-dal-api
spec:
  type: ClusterIP
  selector:
    app: manman-worker-dal-dev
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      name: http
---
# Source: manman-host/templates/experience-api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manman-experience-dev
  namespace: manman
  labels:
    app: manman-experience-dev
    component: experience-api
  annotations:
    # Ensure this deploys after migrations complete
    "argocd.argoproj.io/sync-wave": "0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: manman-experience-dev
  template:
    metadata:
      namespace: manman
      labels:
        app: manman-experience-dev
        component: experience-api
    spec:
      containers:
        - name: manman-experience-api
          image: "ghcr.io/whale-net/manman:v1.0.0"
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 256Mi
          ports:
            - containerPort: 8000
              name: http
          args:
            - host
            - start-experience-api
            # Migrations run as pre-install hook, so skip the migration check
            - --no-should-run-migration-check
            
          livenessProbe:
            httpGet:
              path: /experience/health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe: # Add readinessProbe
            httpGet:
              path: /experience/health # Health check path
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          # TODO - improve how secrets are sourced in this template
          env:
            - name: MANMAN_POSTGRES_URL
              value: postgresql+psycopg2://test:test@test-db:5432/manman_test
            - name: MANMAN_RABBITMQ_HOST
              value: test-rabbitmq
            - name: MANMAN_RABBITMQ_PORT
              value: "5672"
            - name: MANMAN_RABBITMQ_USER
              value: test-user
            - name: MANMAN_RABBITMQ_PASSWORD
              value: test-password
            - name: MANMAN_RABBITMQ_ENABLE_SSL
              value: "false"
            - name: MANMAN_RABBITMQ_SSL_HOSTNAME
              value: "test-ssl-hostname"
            - name: APP_ENV
              value: dev
            - name: MANMAN_LOG_OTLP
              value: "true"
            - name: OTEL_SERVICE_NAME
              value: manman-experience-dev
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "deployment-name=manman-experience-dev"
            - name: OTEL_EXPORTER_OTLP_LOGS_ENDPOINT
              value: <logs_endpoint>
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: <traces_endpoint>
---
# Source: manman-host/templates/status-api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manman-status-dev
  namespace: manman
  labels:
    app: manman-status-dev
    component: status-api
  annotations:
    # Ensure this deploys after migrations complete
    "argocd.argoproj.io/sync-wave": "0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: manman-status-dev
  template:
    metadata:
      namespace: manman
      labels:
        app: manman-status-dev
        component: status-api
    spec:
      containers:
        - name: manman-status-api
          image: "ghcr.io/whale-net/manman:v1.0.0"
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 256Mi
          ports:
            - containerPort: 8000
              name: http
          args:
            - host
            - start-status-api
            # Migrations run as pre-install hook, so skip the migration check
            - --no-should-run-migration-check
            
          livenessProbe:
            httpGet:
              path: /status/health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe: # Add readinessProbe
            httpGet:
              path: /status/health # Health check path
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          # TODO - improve how secrets are sourced in this template
          env:
            - name: MANMAN_POSTGRES_URL
              value: postgresql+psycopg2://test:test@test-db:5432/manman_test
            - name: MANMAN_RABBITMQ_HOST
              value: test-rabbitmq
            - name: MANMAN_RABBITMQ_PORT
              value: "5672"
            - name: MANMAN_RABBITMQ_USER
              value: test-user
            - name: MANMAN_RABBITMQ_PASSWORD
              value: test-password
            - name: MANMAN_RABBITMQ_ENABLE_SSL
              value: "false"
            - name: MANMAN_RABBITMQ_SSL_HOSTNAME
              value: "test-ssl-hostname"
            - name: APP_ENV
              value: dev
            - name: MANMAN_LOG_OTLP
              value: "true"
            - name: OTEL_SERVICE_NAME
              value: manman-status-dev
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "deployment-name=manman-status-dev"
            - name: OTEL_EXPORTER_OTLP_LOGS_ENDPOINT
              value: <logs_endpoint>
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: <traces_endpoint>
---
# Source: manman-host/templates/status-processor-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manman-status-processor-dev
  namespace: manman
  labels:
    app: manman-status-processor-dev
    component: status-processor
  annotations:
    # Ensure this deploys after migrations complete
    "argocd.argoproj.io/sync-wave": "0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: manman-status-processor-dev
  template:
    metadata:
      namespace: manman
      labels:
        app: manman-status-processor-dev
        component: status-processor
    spec:
      containers:
        - name: manman-status-processor
          image: "ghcr.io/whale-net/manman:v1.0.0"
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 256Mi
          args:
            - host
            - start-status-processor
            # Migrations run as pre-install hook, so skip the migration check
            - --no-should-run-migration-check
            
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: MANMAN_POSTGRES_URL
              value: postgresql+psycopg2://test:test@test-db:5432/manman_test
            - name: MANMAN_RABBITMQ_HOST
              value: test-rabbitmq
            - name: MANMAN_RABBITMQ_PORT
              value: "5672"
            - name: MANMAN_RABBITMQ_USER
              value: test-user
            - name: MANMAN_RABBITMQ_PASSWORD
              value: test-password
            - name: MANMAN_RABBITMQ_ENABLE_SSL
              value: "false"
            - name: MANMAN_RABBITMQ_SSL_HOSTNAME
              value: "test-ssl-hostname"
            - name: APP_ENV
              value: dev
            - name: MANMAN_LOG_OTLP
              value: "true"
            - name: OTEL_SERVICE_NAME
              value: manman-status-processor-dev
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "deployment-name=manman-status-processor-dev"
            - name: OTEL_EXPORTER_OTLP_LOGS_ENDPOINT
              value: <logs_endpoint>
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: <traces_endpoint>
---
# Source: manman-host/templates/worker-dal-api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manman-worker-dal-dev
  namespace: manman
  labels:
    app: manman-worker-dal-dev
    component: worker-dal-api
  annotations:
    # Ensure this deploys after migrations complete
    "argocd.argoproj.io/sync-wave": "0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: manman-worker-dal-dev
  template:
    metadata:
      namespace: manman
      labels:
        app: manman-worker-dal-dev
        component: worker-dal-api
    spec:
      containers:
        - name: manman-worker-dal-api
          image: "ghcr.io/whale-net/manman:v1.0.0"
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 256Mi
          ports:
            - containerPort: 8000
              name: http
          args:
            - host
            - start-worker-dal-api
            # Migrations run as pre-install hook, so skip the migration check
            - --no-should-run-migration-check
            
          livenessProbe:
            httpGet:
              path: /workerdal/health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /workerdal/health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          # TODO - improve how secrets are sourced in this template
          env:
            - name: MANMAN_POSTGRES_URL
              value: postgresql+psycopg2://test:test@test-db:5432/manman_test
            - name: MANMAN_RABBITMQ_HOST
              value: test-rabbitmq
            - name: MANMAN_RABBITMQ_PORT
              value: "5672"
            - name: MANMAN_RABBITMQ_USER
              value: test-user
            - name: MANMAN_RABBITMQ_PASSWORD
              value: test-password
            - name: MANMAN_RABBITMQ_ENABLE_SSL
              value: "false"
            - name: MANMAN_RABBITMQ_SSL_HOSTNAME
              value: "test-ssl-hostname"
            - name: APP_ENV
              value: dev
            - name: MANMAN_LOG_OTLP
              value: "true"
            - name: OTEL_SERVICE_NAME
              value: manman-worker-dal-dev
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "deployment-name=manman-worker-dal-dev"
            - name: OTEL_EXPORTER_OTLP_LOGS_ENDPOINT
              value: <logs_endpoint>
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: <traces_endpoint>
---
# Source: manman-host/templates/migration-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: manman-migrations-dev-1
  namespace: manman
  labels:
    app: manman-migrations
    component: migration
  annotations:
    # Helm hooks to run this job before deployments
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    # ArgoCD specific annotations
    "argocd.argoproj.io/hook": PreSync
    "argocd.argoproj.io/hook-delete-policy": HookSucceeded
    "argocd.argoproj.io/sync-wave": "-1"
spec:
  # Ensure the job doesn't run in parallel
  parallelism: 1
  completions: 1
  backoffLimit: 3
  # Add timeout for ArgoCD (5 minutes should be enough for most migrations)
  activeDeadlineSeconds: 300
  template:
    metadata:
      labels:
        app: manman-migrations
        component: migration
      annotations:
        # Prevent ArgoCD from managing this pod directly
        "argocd.argoproj.io/compare-options": IgnoreExtraneous
    spec:
      restartPolicy: Never
      containers:
        - name: manman-migrations
          image: "ghcr.io/whale-net/manman:v1.0.0"
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
          args:
            - host
            - run-migration
          env:
            - name: MANMAN_POSTGRES_URL
              value: postgresql+psycopg2://test:test@test-db:5432/manman_test
            - name: MANMAN_RABBITMQ_HOST
              value: test-rabbitmq
            - name: MANMAN_RABBITMQ_PORT
              value: "5672"
            - name: MANMAN_RABBITMQ_USER
              value: test-user
            - name: MANMAN_RABBITMQ_PASSWORD
              value: test-password
            - name: MANMAN_RABBITMQ_ENABLE_SSL
              value: "false"
            - name: MANMAN_RABBITMQ_SSL_HOSTNAME
              value: "test-ssl-hostname"
            - name: APP_ENV
              value: dev
