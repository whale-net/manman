{{- if .Values.apis.status.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.apis.status.name }}-{{ .Values.env.app_env }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.apis.status.name }}-{{ .Values.env.app_env }}
    component: status-api
  annotations:
    # Ensure this deploys after migrations complete
    "argocd.argoproj.io/sync-wave": "0"
spec:
  replicas: {{ .Values.apis.status.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.apis.status.name }}-{{ .Values.env.app_env }}
  template:
    metadata:
      namespace: {{ .Values.namespace }}
      labels:
        app: {{ .Values.apis.status.name }}-{{ .Values.env.app_env }}
        component: status-api
    spec:
      containers:
        - name: manman-status-api
          image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 256Mi
          ports:
            - containerPort: {{ .Values.apis.status.port }}
              name: http
          args:
            - host
            - {{ .Values.apis.status.command }}
            # Migrations run as pre-install hook, so skip the migration check
            - --no-should-run-migration-check
          livenessProbe:
            httpGet:
              path: /status/health
              port: {{ .Values.apis.status.port }}
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe: # Add readinessProbe
            httpGet:
              path: /status/health # Health check path
              port: {{ .Values.apis.status.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          # TODO - improve how secrets are sourced in this template
          env:
            - name: MANMAN_POSTGRES_URL
              value: {{ .Values.env.db.url }}
            - name: MANMAN_RABBITMQ_HOST
              value: {{ .Values.env.rabbitmq.host }}
            - name: MANMAN_RABBITMQ_PORT
              value: {{ .Values.env.rabbitmq.port | quote }}
            - name: MANMAN_RABBITMQ_USER
              value: {{ .Values.env.rabbitmq.user }}
            - name: MANMAN_RABBITMQ_PASSWORD
              value: {{ .Values.env.rabbitmq.password }}
            - name: MANMAN_RABBITMQ_ENABLE_SSL
              value: {{ .Values.env.rabbitmq.enable_ssl | quote }}
            - name: MANMAN_RABBITMQ_SSL_HOSTNAME
              value: {{ .Values.env.rabbitmq.ssl_hostname | quote }}
            - name: APP_ENV
              value: {{ .Values.env.app_env }}
{{- if .Values.env.otel.logging_enabled }}
            - name: MANMAN_LOG_OTLP
              value: "true"
            - name: OTEL_SERVICE_NAME
              value: {{ .Values.apis.status.name }}-{{ .Values.env.app_env }}
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "deployment-name={{ .Values.apis.status.name }}-{{ .Values.env.app_env }}"
            - name: OTEL_EXPORTER_OTLP_LOGS_ENDPOINT
              value: {{ .Values.env.otelCollector.logs.endpoint }}
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: {{ .Values.env.otelCollector.traces.endpoint }}
{{- end }}
{{- end }}
