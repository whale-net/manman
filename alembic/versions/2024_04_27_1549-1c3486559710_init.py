"""init

Revision ID: 1c3486559710
Revises:
Create Date: 2024-04-27 15:49:30.481603

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "1c3486559710"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("create schema if not exists manman")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "servers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("server_type", sa.Enum("STEAM", name="servertype"), nullable=False),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("end_date", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="manman",
    )
    op.create_table(
        "workers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("ip", sa.String(length=15), nullable=False),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("end_date", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="manman",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("workers", schema="manman")
    op.drop_table("servers", schema="manman")
    # ### end Alembic commands ###
    op.execute("drop type manman.servertype;")
    op.execute("drop schema manman")
