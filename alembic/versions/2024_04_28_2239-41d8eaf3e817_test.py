"""test

Revision ID: 41d8eaf3e817
Revises: 809ff0ead878
Create Date: 2024-04-28 22:39:51.572010

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "41d8eaf3e817"
down_revision: Union[str, None] = "809ff0ead878"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "ix_manman_game_server_instances_game_server_config_id",
        table_name="game_server_instances",
        schema="manman",
    )
    op.drop_table("game_server_instances", schema="manman")
    op.drop_table("workers", schema="manman")
    op.drop_index(
        "ixu_game_server_app_id_server_type", table_name="game_servers", schema="manman"
    )
    op.drop_index(
        "ixu_game_server_name_server_type", table_name="game_servers", schema="manman"
    )
    op.drop_table("game_servers", schema="manman")
    op.drop_index(
        "ix_manman_game_server_configs_game_server_id",
        table_name="game_server_configs",
        schema="manman",
    )
    op.drop_index(
        "ixu_game_server_configs_game_server_id_name",
        table_name="game_server_configs",
        schema="manman",
    )
    op.drop_index(
        "ixuf_game_server_configs_default_config",
        table_name="game_server_configs",
        schema="manman",
        postgresql_where="is_default",
    )
    op.drop_table("game_server_configs", schema="manman")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "game_server_configs",
        sa.Column(
            "game_server_config_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('manman.game_server_configs_game_server_config_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("game_server_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("is_default", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("executable", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "args", postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["game_server_id"],
            ["manman.game_servers.game_server_id"],
            name="game_server_configs_game_server_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "game_server_config_id", name="game_server_configs_pkey"
        ),
        schema="manman",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        "ixuf_game_server_configs_default_config",
        "game_server_configs",
        ["game_server_id", "is_default"],
        unique=True,
        schema="manman",
        postgresql_where="is_default",
    )
    op.create_index(
        "ixu_game_server_configs_game_server_id_name",
        "game_server_configs",
        ["game_server_id", "name"],
        unique=True,
        schema="manman",
    )
    op.create_index(
        "ix_manman_game_server_configs_game_server_id",
        "game_server_configs",
        ["game_server_id"],
        unique=False,
        schema="manman",
    )
    op.create_table(
        "game_servers",
        sa.Column(
            "game_server_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('manman.game_servers_game_server_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "server_type",
            postgresql.ENUM("STEAM", name="servertype"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("app_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("game_server_id", name="game_servers_pkey"),
        schema="manman",
        postgresql_ignore_search_path=False,
    )
    op.create_index(
        "ixu_game_server_name_server_type",
        "game_servers",
        ["name", "server_type"],
        unique=True,
        schema="manman",
    )
    op.create_index(
        "ixu_game_server_app_id_server_type",
        "game_servers",
        ["app_id", "server_type"],
        unique=True,
        schema="manman",
    )
    op.create_table(
        "workers",
        sa.Column(
            "worker_id",
            sa.INTEGER(),
            server_default=sa.text("nextval('manman.workers_worker_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "end_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("worker_id", name="workers_pkey"),
        schema="manman",
    )
    op.create_table(
        "game_server_instances",
        sa.Column(
            "game_server_instance_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('manman.game_server_instances_game_server_instance_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "game_server_config_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "end_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["game_server_config_id"],
            ["manman.game_server_configs.game_server_config_id"],
            name="game_server_instances_game_server_config_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "game_server_instance_id", name="game_server_instances_pkey"
        ),
        schema="manman",
    )
    op.create_index(
        "ix_manman_game_server_instances_game_server_config_id",
        "game_server_instances",
        ["game_server_config_id"],
        unique=False,
        schema="manman",
    )
    # ### end Alembic commands ###
