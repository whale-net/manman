"""init

Revision ID: 0df8f684d1c7
Revises:
Create Date: 2024-04-27 17:33:24.036660

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "0df8f684d1c7"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("create schema if not exists manman")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "game_servers",
        sa.Column("game_server_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("server_type", sa.Enum("STEAM", name="servertype"), nullable=False),
        sa.Column("app_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("game_server_id"),
        schema="manman",
    )
    op.create_table(
        "workers",
        sa.Column("worker_id", sa.Integer(), nullable=False),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("end_date", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("worker_id"),
        schema="manman",
    )
    op.create_table(
        "game_server_configs",
        sa.Column("game_server_config_id", sa.Integer(), nullable=False),
        sa.Column("game_server_id", sa.Integer(), nullable=False),
        sa.Column("is_default", sa.Boolean(), nullable=False),
        sa.Column("executable", sa.String(), nullable=False),
        sa.Column("args", sa.ARRAY(sa.String()), nullable=False),
        sa.ForeignKeyConstraint(
            ["game_server_id"],
            ["manman.game_servers.game_server_id"],
        ),
        sa.PrimaryKeyConstraint("game_server_config_id"),
        schema="manman",
    )
    op.create_index(
        op.f("ix_manman_game_server_configs_game_server_id"),
        "game_server_configs",
        ["game_server_id"],
        unique=False,
        schema="manman",
    )
    op.create_index(
        "ixuf_game_server_configs_default_config",
        "game_server_configs",
        ["game_server_id", "is_default"],
        unique=True,
        schema="manman",
        postgresql_where=sa.text("is_default"),
    )
    op.create_table(
        "servers",
        sa.Column("game_sever_instance_id", sa.Integer(), nullable=False),
        sa.Column("game_server_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("end_date", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["game_server_id"],
            ["manman.game_servers.game_server_id"],
        ),
        sa.PrimaryKeyConstraint("game_sever_instance_id"),
        schema="manman",
    )
    op.create_index(
        op.f("ix_manman_servers_game_server_id"),
        "servers",
        ["game_server_id"],
        unique=False,
        schema="manman",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_manman_servers_game_server_id"), table_name="servers", schema="manman"
    )
    op.drop_table("servers", schema="manman")
    op.drop_index(
        "ixuf_game_server_configs_default_config",
        table_name="game_server_configs",
        schema="manman",
        postgresql_where=sa.text("is_default"),
    )
    op.drop_index(
        op.f("ix_manman_game_server_configs_game_server_id"),
        table_name="game_server_configs",
        schema="manman",
    )
    op.drop_table("game_server_configs", schema="manman")
    op.drop_table("workers", schema="manman")
    op.drop_table("game_servers", schema="manman")
    # ### end Alembic commands ###

    op.execute("drop type manman.servertype;")
    op.execute("drop schema manman")
